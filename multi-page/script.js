`use strict`;

  import {text, back, } from `./level.js`;

document.addEventListener(`DOMContentLoaded`, () => {
  // html elemnts
  // right side all contents
  const right = document.querySelector(`.right`);

  // input box
  const guessBox = document.querySelector(`.guess`);

  // check btn
  const checkButton = document.querySelector(`.check`);

  // again btn
  const again = document.querySelector(`.btn.again`);

  // message
  const message = document.querySelector(`.message`);

  // attempts
  const attempt = document.querySelector(`.attempt`);

  // score
  const highscore = document.querySelector(`.score`);

  // secret number
  const num = document.querySelector(`.number`);

  // body
  const body = document.querySelector(`body`);

  // all buttons
  const buttons = document.querySelectorAll(`.btn`);

  // how to play
  // btn
  const rule = document.querySelector(`.rules-btn`);

  // rule window
  const rulesBook = document.querySelector(`.rule-book`);

  // close btn
  const close = document.querySelector(`.close`);


  let tempHighscore = 0;

  // to let the user know the level is selected or not
  let levelSelected = false;

  // store the number generated by system
  let secretNum;

  // main window

  // number generation
  /*const generateNum = (lvl) => {
    secretNum = Math.floor(Math.random() * lvl) + 1;

    return secretNum;
  };*/

  // to set difficulty level based on user selection
  const setDifficulty = (lvl) => {
    // to change the difficulty
    if (lvl === `easy`) {
    
      levelSelected = true;
      level.forEach((level) => {
        level.style.display = `none`;
      });
      text.style.display = `none`;
      right.style.display = `block`;
      guessBox.style.display = `block`;
      checkButton.style.display = `block`;
      again.style.display = `block`;
      guessBox.value = ``;
      // attempt
      attempt.textContent = 5;
      // hint message
      message.textContent = `Guess a number between 1 and 20`;
      // to change the difficulty to easy
      return 20;
    } else if (lvl === `medium`) {
      levelSelected = true;
      again.style.display = `block`;
      level.forEach((level) => {
        level.style.display = `none`;
      });
      text.style.display = `none`;
      right.style.display = `block`;
      guessBox.style.display = `block`;
      checkButton.style.display = `block`;
      guessBox.value = ``;
      // attempts
      attempt.textContent = 7;
      // hint message
      message.textContent = `Guess a number between 1 and 50`;
      // to change the difficulty to medium
      return 50;
    } else if (lvl === `hard`) {
      levelSelected = true;
      level.forEach((level) => {
        level.style.display = `none`;
      });
      text.style.display = `none`;
      right.style.display = `block`;
      guessBox.style.display = `block`;
      checkButton.style.display = `block`;
      again.style.display = `block`;
      guessBox.value = ``;
      // attempts
      attempt.textContent = 10;
      // hint message
      message.textContent = `Guess a number between 1 and 100`;
      // to change the difficulty to hard
      return 100;
    }
  };

  const lvlEvent = () => {
    let value;
    level.forEach((level) => {
      level.addEventListener(`click`, (event) => {
        // to target the buttons difficulty attribute
        let levels = event.target.getAttribute(`difficulty`);
        // to set the difficulty level
        value = setDifficulty(levels);
        secretNum = Math.floor(Math.random() * value) + 1;
        console.log(secretNum);
        
      });
    });
    return value;
  };

  //   generateNum(lvlEvent());
  lvlEvent();

  // store the system generated number
  let newSecNum = secretNum;

  // check the user entered number
  const check = () => {
    // level is not selected
    if (!levelSelected) {
      message.textContent = `😒Please select a level`;
    }
    // level is selected
    // user does not enter the number
    if (!guessBox.value) {
      message.textContent = `😕Please guess a number`;
    }
    // game logic

    // confirming the user entered value is number type
    const guessed = Number(guessBox.value);
    console.log(guessed);

   /* if (guessed === secretNum) {
      console.log(`checked the condition`);
    }*/
        //user entered number is too high
        if (guessed > secretNum) {
          message.textContent = `❌ Too High`;
          // attempts deduction
          if (attempt.textContent > 0) {
            const temp = Number(attempt.textContent)--;
            temp = temp--;
            attempt.textContent = String(temp);
          }
          if (attempt.textContent == 0) {
            message.textContent = `😢You loose the game`;
            body.style.backgroundColor = `#f95959`;
            again.style.color = `#f95959`;
            checkButton.style.color = `#f95959`;
            num.style.color = `#f95959`;
            again.style.display = `block`;
            again.disabled = false;
          }
        }
        //user entered number is too low
        if (guessed < secretNum) {
          message.textContent = `❌ Too Low`;
          if (attempt.textContent > 0) {
            const temp = Number(attempt.textContent)--;
            temp = temp--;
            attempt.textContent = String(temp);
          }
          if (attempt.textContent == 0) {
            message.textContent = `😢You loose the game`;
            body.style.backgroundColor = `#f95959`;
            again.style.color = `#f95959`;
            checkButton.style.color = `#f95959`;
            level.style.color = `#f95959`;
            num.style.color = `#f95959`;
            again.style.display = `block`;
          }
        }
        //user entered number is correct
        if (guessed === secretNum) {
          message.textContent = `🎉Correct Guess`;
          body.style.backgroundColor = `#60b347`;
          num.textContent = secretNum;
          highscore.textContent = +5;
          tempHighscore = highattempt.textContent;
          again.style.display = `block`;
        }
  };
  checkButton.addEventListener(`click`, check);

  // restart the game
  const playAgain = () => {
    guessBox.value = ``;
    body.style.backgroundColor = `dodgerblue`;
    num.textContent = `?`;
    num.style.color = `dodgerblue`;
    attempt.textContent = 0;
    newSecNum = generateNum(lvlEvent());
    console.log(newSecNum);

    buttons.forEach((button) => {
      button.style.color = `dodgerblue`;
      button.addEventListener(`mouseover`, () => {
        button.style.color = `#F0FFFF`;
      });
      button.addEventListener(`mouseout`, () => {
        button.style.color = `dodgerblue`;
      });
    });
    num.addEventListener(`mouseover`, () => {
      num.style.color = `#F0FFFF`;
    });
    num.addEventListener(`mouseout`, () => {
      num.style.color = `dodgerblue`;
    });
    level.disabled = false;
  };

  again.addEventListener(`click`, playAgain);

  // rules
  const showRules = () => {
    rulesBook.style.display = `block`;
    buttons.forEach((buttons) => {
      buttons.disabled = true;
    });
  };

  const closeRules = () => {
    rulesBook.style.display = `none`;
    buttons.forEach((buttons) => {
      buttons.disabled = false;
    });
  };

  const closeTxt = () => {
    close.textContent = `x`;
  };

  const closeText = () => {
    close.textContent = `close`;
  };

  // show rules
  rule.addEventListener(`click`, showRules);

  // close rules
  close.addEventListener(`click`, closeRules);

  // close text
  close.addEventListener(`mouseover`, closeTxt);

  // close text
  close.addEventListener(`mouseout`, closeText);
});
